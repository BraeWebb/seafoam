begin_compilation
  name " HotSpotCompilation-127[JavaExamples.exampleArrayAllocation(int, int)]"
  method "HotSpotCompilation-127[JavaExamples.exampleArrayAllocation(int, int)]"
  date 1583364091792
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j28 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j28 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j173 
=== Usages ===
v217 v218 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j173  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j28 
index: - 
=== Succesors ===
=== Usages ===
j173 v175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j28 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
lastLocationAccess: - 
=== Succesors ===
next: j174 
=== Usages ===
j200 v219 v220 v222 v226 a102 v221 v225 v224 v223 
=== Predecessor ===
j28 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v217 lastLocationAccess: - #next: j174  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j28 
index: - 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j28 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v218 
lastLocationAccess: - 
=== Succesors ===
next: v40 
=== Usages ===
v48 
=== Predecessor ===
j173 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v218 lastLocationAccess: - #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid j129 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j200 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j173 
y: j129 
=== Succesors ===
=== Usages ===
v48 v175 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j173 y: j129  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@136e382d8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j174 
y: j200 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j174 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 a52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
j174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a52 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a52  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.exampleArrayAllocation(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 296
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 
=== Succesors ===
=== Usages ===
v59 a52 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a52 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array_or_null(KlassPointer,int)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@147e04090
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v26 i16 
=== Succesors ===
next: v53 
=== Usages ===
v54 a104 
=== Predecessor ===
v49 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v26 i16 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a52 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a52  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v56 
=== Usages ===
=== Predecessor ===
a52 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v55 #falseSuccessor: v56  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@137006448
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v56 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
value: j200 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v217 value: j200 stateAfter: - lastLocationAccess: - #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v223 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v223 #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v224 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v224 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v225 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v225 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v226 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v226 #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v219 
value: i16 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v219 value: i16 stateAfter: - lastLocationAccess: - #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v220 
value: j27 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v220 value: j27 stateAfter: - lastLocationAccess: - #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v222 
value: v210 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v222 value: v210 stateAfter: - lastLocationAccess: - #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j62 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v221 
value: j62 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a102 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v221 value: j62 stateAfter: - lastLocationAccess: - #next: a102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j173 
=== Succesors ===
next: v103 
=== Usages ===
a104 
=== Predecessor ===
v181 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j173 #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
a102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v58 
values: a52 a102 
=== Succesors ===
=== Usages ===
v216 a24 v215 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v58 values: a52 a102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v57 v103 
=== Succesors ===
next: v23 
=== Usages ===
a104 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v57 v103 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a104 
index: - 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v216 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v216 value: i2 stateAfter: - lastLocationAccess: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a104 
index: - 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v215 
value: i1 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a24 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v215 value: i1 stateAfter: - lastLocationAccess: - #next: a24  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# [I
=== Inputs ===
object: a104 
=== Succesors ===
next: v25 
=== Usages ===
v12 
=== Predecessor ===
v20 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a104 #next: v25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
a24 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 11]
stamp: void
=== Inputs ===
result: a24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a24 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j28 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j28 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j173 
=== Usages ===
v217 v218 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j173  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j28 
index: - 
=== Succesors ===
=== Usages ===
j173 v175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j28 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j173 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
lastLocationAccess: - 
=== Succesors ===
next: j174 
=== Usages ===
j200 v219 v220 v222 v226 a102 v221 v225 v224 v223 
=== Predecessor ===
j28 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v217 lastLocationAccess: - #next: j174  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j28 
index: - 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j28 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j174 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v218 
lastLocationAccess: - 
=== Succesors ===
next: v40 
=== Usages ===
v48 
=== Predecessor ===
j173 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v218 lastLocationAccess: - #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid j129 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j200 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j173 
y: j129 
=== Succesors ===
=== Usages ===
v48 v175 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j173 y: j129  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@136e382d8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j174 
y: j200 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j174 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 a52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@13e00bfb0 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
j174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a52 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a52  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.exampleArrayAllocation(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 296
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 
=== Succesors ===
=== Usages ===
v59 a52 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a52 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array_or_null(KlassPointer,int)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@147e04090
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v26 i16 
=== Succesors ===
next: v53 
=== Usages ===
v54 a104 
=== Predecessor ===
v49 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v26 i16 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a52 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a52  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v56 
=== Usages ===
=== Predecessor ===
a52 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v55 #falseSuccessor: v56  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@137006448
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v56 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
value: j200 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v217 value: j200 stateAfter: - lastLocationAccess: - #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
result [v2|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v223 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v223 #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
result [v2|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v224 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v224 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
result [v2|QWORD + 344] <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v225 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v225 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
result [v2|QWORD + 408] <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v226 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v226 #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
result [v2|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v219 
value: i16 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v219 value: i16 stateAfter: - lastLocationAccess: - #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
result [v2|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j27 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v220 
value: j27 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v220 value: j27 stateAfter: - lastLocationAccess: - #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
result [v2|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v222 
value: v210 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v222 value: v210 stateAfter: - lastLocationAccess: - #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
result [v2|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j62 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v221 
value: j62 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a102 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v221 value: j62 stateAfter: - lastLocationAccess: - #next: a102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j173 
=== Succesors ===
next: v103 
=== Usages ===
a104 
=== Predecessor ===
v181 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j173 #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
a102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a104 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v58 
values: a52 a102 
=== Succesors ===
=== Usages ===
v216 a24 v215 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v58 values: a52 a102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v57 v103 
=== Succesors ===
next: v23 
=== Usages ===
a104 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v57 v103 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
result [v7|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a104 
index: - 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v216 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v216 value: i2 stateAfter: - lastLocationAccess: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result [v7|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a104 
index: - 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v215 
value: i1 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a24 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v215 value: i1 stateAfter: - lastLocationAccess: - #next: a24  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a24 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# [I
=== Inputs ===
object: a104 
=== Succesors ===
next: v25 
=== Usages ===
v12 
=== Predecessor ===
v20 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a104 #next: v25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
a24 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 11]
stamp: void
=== Inputs ===
result: a24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a24 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[48, 50[[60, 62[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[58, 60[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[56, 60[ "NoOptimization"
  v0|d DWORD "[v0|d]" v0|d rsi|q [6, 46[[52, 79[6 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 44[[52, 79[8 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [10, 38[10 MustHaveRegister 12 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [12, 20[12 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [54, 56[54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q rax|q [62, 71[62 MustHaveRegister 64 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v2|q [38, 41[38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|q [42, 48[44 MustHaveRegister 46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[48, 50[[60, 62[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[58, 60[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[56, 60[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 46[[52, 79[6 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 44[[52, 79[8 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [10, 38[10 MustHaveRegister 12 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [12, 20[12 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [54, 56[54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [62, 71[62 MustHaveRegister 64 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|q [38, 41[38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [42, 48[44 MustHaveRegister 46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[48, 50[[60, 62[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[58, 60[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[56, 60[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 46[[52, 79[6 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 44[[52, 79[8 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [10, 38[10 MustHaveRegister 12 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [12, 20[12 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [54, 56[54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [62, 71[62 MustHaveRegister 64 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|q [38, 41[38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [42, 48[44 MustHaveRegister 46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[48, 50[[60, 62[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[58, 60[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[56, 60[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 46[[52, 79[6 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 44[[52, 79[8 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [10, 38[10 MustHaveRegister 12 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [12, 20[12 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [54, 56[54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [62, 71[62 MustHaveRegister 64 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|q [38, 41[38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [42, 48[44 MustHaveRegister 46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [v2|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [v7|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   62  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   64  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   64  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   64  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   64  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   64  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   64  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   64  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   64  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   64  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   64  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD + 12] y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   60  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   64  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 644] y: -15201 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0]
locals: r10|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_2      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: dup           
     8: iconst_1      
     9: iload_1       
    10: iastore       
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c2410448bd6448bda498b4760488d7018493b77700f8758000000498977600f0d88d80000000f0d88180100000f0d88580100000f0d8898010000c7400c0200000048c70001000000c74008addeadde48c74010000000004489581444895010488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba02000000e800000000904885c075cb41c787840200009fc4ffff49c7879002000000000000e80000000090e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD  <||@
  Comment 16 6 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 26 12 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 30 14 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 34 16 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 40 block B4 null  <||@
  Comment 40 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 40 20 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 44 22 AMD64PREFETCH ~[rax|QWORD + 216] instr: 3  <||@
  Comment 51 24 AMD64PREFETCH ~[rax|QWORD + 280] instr: 3  <||@
  Comment 58 26 AMD64PREFETCH ~[rax|QWORD + 344] instr: 3  <||@
  Comment 65 28 AMD64PREFETCH ~[rax|QWORD + 408] instr: 3  <||@
  Comment 72 30 MOV [rax|QWORD + 12] y: 2 size: DWORD  <||@
  Comment 79 32 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 86 34 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 86 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 93 36 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 101 38 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 101 40 JUMP ~[] destination: B4 -> B5  <||@
  Comment 101 block B5 null  <||@
  Comment 101 42 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 101 44 MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD  <||@
  Comment 105 46 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 109 50 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170  <||@
  Comment 118 12  <||@
  Comment 128 block B1 null  <||@
  Comment 128 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 128 54 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 128 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 138 58 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 143 60 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 143 {Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 148 []at JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r11|DWORD   <||@
  Comment 149 64 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 152 66 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 154 block B2 null  <||@
  Comment 154 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 74 MOV [r15|QWORD + 644] y: -15201 size: DWORD  <||@
  Comment 165 76 MOV [r15|QWORD + 656] y: 0 size: QWORD  <||@
  Comment 176 78 DEOPT info [bci:0]  <||@
  Comment 176 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1108bc130, value=4610474814]:0x112ce433e}  <||@
  Comment 181 []at JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r11|DWORD   <||@
  Comment 182 {Stub<ExceptionHandlerStub.exceptionHandler>@0x112e24320:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 182 4  <||@
  Comment 188 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1108bc128, value=4610474560]:0x112ce4240}  <||@
  Comment 188 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-127[JavaExamples.exampleArrayAllocation(int, int)]"
  method "HotSpotCompilation-127[JavaExamples.exampleArrayAllocation(int, int)]"
  date 1583364091836
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 112e34fe0 89842400c0feff4883ec1848896c2410448bd6448bda498b4760488d7018493b77700f8758000000498977600f0d88d80000000f0d88180100000f0d88580100000f0d8898010000c7400c0200000048c70001000000c74008610100f848c74010000000004489581444895010488b6c24104883c4188505aa5f93fbc5f877c348be080b00c007000000ba02000000e86cf6ffff904885c075cb41c787840200009fc4ffff49c7879002000000000000e8a9f2eaff90e885f2feff90e89ff1eaff90f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13e00a590 slotKind: QWORD  <||@
  Comment 16 6 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 26 12 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 30 14 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 34 16 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 40 block B4 null  <||@
  Comment 40 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 40 20 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 44 22 AMD64PREFETCH ~[rax|QWORD + 216] instr: 3  <||@
  Comment 51 24 AMD64PREFETCH ~[rax|QWORD + 280] instr: 3  <||@
  Comment 58 26 AMD64PREFETCH ~[rax|QWORD + 344] instr: 3  <||@
  Comment 65 28 AMD64PREFETCH ~[rax|QWORD + 408] instr: 3  <||@
  Comment 72 30 MOV [rax|QWORD + 12] y: 2 size: DWORD  <||@
  Comment 79 32 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 86 34 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 86 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 93 36 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 101 38 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 101 40 JUMP ~[] destination: B4 -> B5  <||@
  Comment 101 block B5 null  <||@
  Comment 101 42 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 101 44 MOV (x: [rax|QWORD[.] + 20], y: r11|DWORD) size: DWORD  <||@
  Comment 105 46 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 109 50 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170  <||@
  Comment 118 12  <||@
  Comment 128 block B1 null  <||@
  Comment 128 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 128 54 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 128 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 138 58 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 143 60 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 143 {Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 148 []at JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r11|DWORD   <||@
  Comment 149 64 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 152 66 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 154 block B2 null  <||@
  Comment 154 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 74 MOV [r15|QWORD + 644] y: -15201 size: DWORD  <||@
  Comment 165 76 MOV [r15|QWORD + 656] y: 0 size: QWORD  <||@
  Comment 176 78 DEOPT info [bci:0]  <||@
  Comment 176 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1108bc130, value=4610474814]:0x112ce433e}  <||@
  Comment 181 []at JavaExamples.exampleArrayAllocation(JavaExamples.java:296) [bci: 0, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r11|DWORD   <||@
  Comment 182 {Stub<ExceptionHandlerStub.exceptionHandler>@0x112e24320:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 182 4  <||@
  Comment 188 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1108bc128, value=4610474560]:0x112ce4240}  <||@
  Comment 188 5  <||@
  HexCodeFile>>> <|@
end_nmethod
