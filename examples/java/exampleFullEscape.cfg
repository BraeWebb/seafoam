begin_compilation
  name " HotSpotCompilation-124[JavaExamples.exampleFullEscape(int)]"
  method "HotSpotCompilation-124[JavaExamples.exampleFullEscape(int)]"
  date 1583364091745
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j40 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j40 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j186 
=== Usages ===
v247 v248 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j186  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j40 
index: - 
=== Succesors ===
=== Usages ===
j186 v188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j40 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v247 
lastLocationAccess: - 
=== Succesors ===
next: j187 
=== Usages ===
j224 v249 v250 v252 v256 a115 v251 v255 v254 v253 
=== Predecessor ===
j40 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v247 lastLocationAccess: - #next: j187  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j40 
index: - 
=== Succesors ===
=== Usages ===
j187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j40 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v248 
lastLocationAccess: - 
=== Succesors ===
next: v52 
=== Usages ===
v61 
=== Predecessor ===
j186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v248 lastLocationAccess: - #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j186 
y: j142 
=== Succesors ===
=== Usages ===
v61 v188 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j186 y: j142  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@136e382d8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j187 
y: j224 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j187 y: j224  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 a65 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v34 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
j187 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a65 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a65  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.exampleFullEscape(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 120
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - 
=== Succesors ===
=== Usages ===
v72 a65 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a65 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a65 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array_or_null(KlassPointer,int)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@147e04090
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v38 i31 
=== Succesors ===
next: v66 
=== Usages ===
v67 a117 
=== Predecessor ===
v62 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v38 i31 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a65 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a65  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
a65 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v68 #falseSuccessor: v69  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@137006448
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v247 
value: j224 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v247 value: j224 stateAfter: - lastLocationAccess: - #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v253 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v253 #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v254 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v254 #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v255 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v255 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v256 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v256 #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v249 
value: i31 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v249 value: i31 stateAfter: - lastLocationAccess: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v250 
value: j39 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v250 value: j39 stateAfter: - lastLocationAccess: - #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v252 
value: v234 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v252 value: v234 stateAfter: - lastLocationAccess: - #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v251 
value: j75 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a115 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v251 value: j75 stateAfter: - lastLocationAccess: - #next: a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j186 
=== Succesors ===
next: v116 
=== Usages ===
a117 
=== Predecessor ===
v194 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j186 #next: v116  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
a115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v71 
values: a65 a115 
=== Succesors ===
=== Usages ===
v246 a35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v71 values: a65 a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v70 v116 
=== Succesors ===
next: v34 
=== Usages ===
a117 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v70 v116 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a117 
index: - 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a117 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v246 
value: i1 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a35 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v246 value: i1 stateAfter: - lastLocationAccess: - #next: a35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# [I
=== Inputs ===
object: a117 
=== Succesors ===
next: v36 
=== Usages ===
a17 v245 
=== Predecessor ===
v34 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a117 #next: v36  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
a35 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid a16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
rawvalue: Instance<java.lang.Class>
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Instance<java.lang.Class>]
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 j210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a16 
index: - 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a16 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a17 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
op: Compress
stamp: n!# [I
=== Inputs ===
value: a35 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: JavaExamples.objectField
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
nullCheck: false
stamp: void
volatileAccess: true
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
value: a17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v244 value: a17 stateAfter: - lastLocationAccess: - #next: v259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j210 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a16 
=== Succesors ===
next: v217 
=== Usages ===
j213 
=== Predecessor ===
v259 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a16 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j210 
y: i212 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j210 y: i212  <|@  <|@
f <@~|@floating>@ <|@
tid j235 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
rawvalue: 4531113984
stableDimension: 0
stamp: i64 [4531113984] ⇊000000010e135000 ⇈000000010e135000
stampKind: i64
value: long[4531113984|0x10e135000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: j235 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: j235  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v257 
value: i218 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i243 
=== Usages ===
=== Predecessor ===
j210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v257 value: i218 stateAfter: - lastLocationAccess: - #next: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a35 
index: - 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a35 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:122) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v245 
lastLocationAccess: - 
=== Succesors ===
next: v11 
=== Usages ===
v11 
=== Predecessor ===
v217 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v245 lastLocationAccess: - #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:122) [bci: 15]
stamp: void
=== Inputs ===
result: i243 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i243 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i243 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j40 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j40 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j186 
=== Usages ===
v247 v248 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j186  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j40 
index: - 
=== Succesors ===
=== Usages ===
j186 v188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j40 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j186 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v247 
lastLocationAccess: - 
=== Succesors ===
next: j187 
=== Usages ===
j224 v249 v250 v252 v256 a115 v251 v255 v254 v253 
=== Predecessor ===
j40 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v247 lastLocationAccess: - #next: j187  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j40 
index: - 
=== Succesors ===
=== Usages ===
j187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j40 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j187 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v248 
lastLocationAccess: - 
=== Succesors ===
next: v52 
=== Usages ===
v61 
=== Predecessor ===
j186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v248 lastLocationAccess: - #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j224 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j186 
y: j142 
=== Succesors ===
=== Usages ===
v61 v188 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j186 y: j142  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@136e382d8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j187 
y: j224 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j187 y: j224  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 a65 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v34 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@140a41440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
j187 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a65 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a65  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.exampleFullEscape(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 120
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - 
=== Succesors ===
=== Usages ===
v72 a65 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a65 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a65 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array_or_null(KlassPointer,int)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@147e04090
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v38 i31 
=== Succesors ===
next: v66 
=== Usages ===
v67 a117 
=== Predecessor ===
v62 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v38 i31 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a65 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a65  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
a65 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v68 #falseSuccessor: v69  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@137006448
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v247 
value: j224 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v247 value: j224 stateAfter: - lastLocationAccess: - #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
result [v1|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v253 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v253 #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
result [v1|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v254 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v254 #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
result [v1|QWORD + 344] <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v255 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v255 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
result [v1|QWORD + 408] <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v256 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v256 #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
result [v1|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v249 
value: i31 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v249 value: i31 stateAfter: - lastLocationAccess: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
result [v1|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j39 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v250 
value: j39 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v250 value: j39 stateAfter: - lastLocationAccess: - #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
result [v1|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v252 
value: v234 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v252 value: v234 stateAfter: - lastLocationAccess: - #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
result [v1|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j186 
index: - 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v251 
value: j75 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a115 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v251 value: j75 stateAfter: - lastLocationAccess: - #next: a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a115 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j186 
=== Succesors ===
next: v116 
=== Usages ===
a117 
=== Predecessor ===
v194 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j186 #next: v116  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
a115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a117 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v71 
values: a65 a115 
=== Succesors ===
=== Usages ===
v246 a35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v71 values: a65 a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v70 v116 
=== Succesors ===
next: v34 
=== Usages ===
a117 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v70 v116 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
result [v6|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a117 
index: - 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a117 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v246 
value: i1 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a35 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v246 value: i1 stateAfter: - lastLocationAccess: - #next: a35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a35 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# [I
=== Inputs ===
object: a117 
=== Succesors ===
next: v36 
=== Usages ===
a17 v245 
=== Predecessor ===
v34 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a117 #next: v36  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.exampleFullEscape(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
a35 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid a16 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
rawvalue: Instance<java.lang.Class>
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Instance<java.lang.Class>]
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 j210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
result [v7|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a16 
index: - 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a16 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a17 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
op: Compress
stamp: n!# [I
=== Inputs ===
value: a35 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: JavaExamples.objectField
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
nullCheck: false
stamp: void
volatileAccess: true
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
value: a17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v244 value: a17 stateAfter: - lastLocationAccess: - #next: v259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j210 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j210 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a16 
=== Succesors ===
next: v217 
=== Usages ===
j213 
=== Predecessor ===
v259 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a16 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j213 <|@
result v9|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j210 
y: i212 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j210 y: i212  <|@  <|@
f <@~|@floating>@ <|@
tid j235 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
rawvalue: 4531113984
stableDimension: 0
stamp: i64 [4531113984] ⇊000000010e135000 ⇈000000010e135000
stampKind: i64
value: long[4531113984|0x10e135000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
result [v9|QWORD[*] + v10|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: j235 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: j235  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.exampleFullEscape(JavaExamples.java:121) [bci: 9]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v257 
value: i218 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i243 
=== Usages ===
=== Predecessor ===
j210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v257 value: i218 stateAfter: - lastLocationAccess: - #next: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
result [v6|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a35 
index: - 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a35 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i243 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:122) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v245 
lastLocationAccess: - 
=== Succesors ===
next: v11 
=== Usages ===
v11 
=== Predecessor ===
v217 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v245 lastLocationAccess: - #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.exampleFullEscape(JavaExamples.java:122) [bci: 15]
stamp: void
=== Inputs ===
result: i243 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i243 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i243 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: v2|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction v10|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: v2|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction v10|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v11|d [0, 1[[60, 62[[72, 74[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[70, 72[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v3|q [0, 6[[68, 72[ "NoOptimization"
  v0|d DWORD "[v0|d]" v0|d rsi|q [6, 42[[64, 91[6 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q -1 [8, 36[8 MustHaveRegister 10 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [10, 18[10 MustHaveRegister 12 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q rax|q [74, 83[74 MustHaveRegister 76 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v1|q [36, 39[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v5|q [40, 58[42 MustHaveRegister 46 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [44, 52[44 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v6|q [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v7|q [52, 56[52 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v11|d [0, 1[[60, 62[[72, 74[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[70, 72[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v3|q [0, 6[[68, 72[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 42[[64, 91[6 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rax|q]" v1|q -1 [8, 36[8 MustHaveRegister 10 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rsi|q]" v2|q -1 [10, 18[10 MustHaveRegister 12 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q rax|q [74, 83[74 MustHaveRegister 76 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q v1|q [36, 39[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v5|q [40, 58[42 MustHaveRegister 46 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [44, 52[44 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d v6|q [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q v7|q [52, 56[52 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q -1 [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: v2|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction v10|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v11|d [0, 1[[60, 62[[72, 74[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[70, 72[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v3|q [0, 6[[68, 72[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 42[[64, 91[6 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rax|q]" v1|q -1 [8, 36[8 MustHaveRegister 10 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rsi|q]" v2|q -1 [10, 18[10 MustHaveRegister 12 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q rax|q [74, 83[74 MustHaveRegister 76 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q v1|q [36, 39[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v5|q [40, 58[42 MustHaveRegister 46 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [44, 52[44 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d v6|q [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q v7|q [52, 56[52 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q -1 [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: v2|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction v10|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v11|d [0, 1[[60, 62[[72, 74[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[70, 72[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v3|q [0, 6[[68, 72[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 42[[64, 91[6 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rax|q]" v1|q -1 [8, 36[8 MustHaveRegister 10 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rsi|q]" v2|q -1 [10, 18[10 MustHaveRegister 12 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q rax|q [74, 83[74 MustHaveRegister 76 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q v1|q [36, 39[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v5|q [40, 58[42 MustHaveRegister 46 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [44, 52[44 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d v6|q [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q v7|q [52, 56[52 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q -1 [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: v2|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction v10|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = LEA [v1|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: v2|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [v1|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [v1|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [v1|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [v1|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v5|QWORD[.] = MOVE v1|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [v7|QWORD[.] + 116], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction v9|QWORD[*] = SHR v7|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction v10|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [v9|QWORD[*] + v10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction v11|DWORD = MOV [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   50  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   56  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   70  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   76  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 644] y: -18529 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0]
locals: r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_0       
     6: iastore       
     7: astore_1      
     8: aload_1       
     9: putstatic     #53         // objectField:java.lang.Object
    12: aload_1       
    13: iconst_0      
    14: iaload        
    15: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c2410448bd6498b4760488d7018493b77700f8782000000498977600f0d88d80000000f0d88180100000f0d88580100000f0d8898010000c7400c0100000048c70001000000c74008addeadde48c74010000000004489501048beaddeaddeaddeadde488bd048c1ea03895674f08304240048c1ee0948ba0050130e01000000c60416008b4010488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba01000000e800000000904885c075a141c787840200009fb7ffff49c7879002000000000000e80000000090e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD  <||@
  Comment 16 6 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 23 10 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 27 12 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 31 14 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 37 block B4 null  <||@
  Comment 37 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 37 18 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 41 20 AMD64PREFETCH ~[rax|QWORD + 216] instr: 3  <||@
  Comment 48 22 AMD64PREFETCH ~[rax|QWORD + 280] instr: 3  <||@
  Comment 55 24 AMD64PREFETCH ~[rax|QWORD + 344] instr: 3  <||@
  Comment 62 26 AMD64PREFETCH ~[rax|QWORD + 408] instr: 3  <||@
  Comment 69 28 MOV [rax|QWORD + 12] y: 1 size: DWORD  <||@
  Comment 76 30 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 83 32 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 83 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 90 34 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 98 36 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 98 38 JUMP ~[] destination: B4 -> B5  <||@
  Comment 98 block B5 null  <||@
  Comment 98 40 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 98 42 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 102 44 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>]  <||@
  Comment 102 {Object[Instance<java.lang.Class>]}  <||@
  Comment 112 46 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3  <||@
  Comment 119 48 MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 122 50 MEMBAR barriers: 4  <||@
  Comment 127 52 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 131 54 rdx|QWORD = MOVE input: long[4531113984|0x10e135000]  <||@
  Comment 141 56 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 145 58 rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 148 62 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170  <||@
  Comment 157 12  <||@
  Comment 167 block B1 null  <||@
  Comment 167 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 66 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 167 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 177 70 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 182 72 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 182 {Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 187 []at JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |r10|DWORD  |-   <||@
  Comment 188 76 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 191 78 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 193 block B2 null  <||@
  Comment 193 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 86 MOV [r15|QWORD + 644] y: -18529 size: DWORD  <||@
  Comment 204 88 MOV [r15|QWORD + 656] y: 0 size: QWORD  <||@
  Comment 215 90 DEOPT info [bci:0]  <||@
  Comment 215 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1108bc130, value=4610474814]:0x112ce433e}  <||@
  Comment 220 []at JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |r10|DWORD  |-   <||@
  Comment 221 {Stub<ExceptionHandlerStub.exceptionHandler>@0x112e24320:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 221 4  <||@
  Comment 227 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1108bc128, value=4610474560]:0x112ce4240}  <||@
  Comment 227 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-124[JavaExamples.exampleFullEscape(int)]"
  method "HotSpotCompilation-124[JavaExamples.exampleFullEscape(int)]"
  date 1583364091798
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 112e34aa0 89842400c0feff4883ec1848896c2410448bd6498b4760488d7018493b77700f8782000000498977600f0d88d80000000f0d88180100000f0d88580100000f0d8898010000c7400c0100000048c70001000000c74008610100f848c74010000000004489501048beb0275f1507000000488bd048c1ea03895674f08304240048c1ee0948ba0050130e01000000c60416008b4010488b6c24104883c4188505c36493fbc5f877c348be080b00c007000000ba01000000e885fbffff904885c075a141c787840200009fb7ffff49c7879002000000000000e8c2f7eaff90e89ef7feff90e8b8f6eaff90f4f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@140a3f988 slotKind: QWORD  <||@
  Comment 16 6 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 23 10 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 27 12 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 31 14 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 37 block B4 null  <||@
  Comment 37 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 37 18 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 41 20 AMD64PREFETCH ~[rax|QWORD + 216] instr: 3  <||@
  Comment 48 22 AMD64PREFETCH ~[rax|QWORD + 280] instr: 3  <||@
  Comment 55 24 AMD64PREFETCH ~[rax|QWORD + 344] instr: 3  <||@
  Comment 62 26 AMD64PREFETCH ~[rax|QWORD + 408] instr: 3  <||@
  Comment 69 28 MOV [rax|QWORD + 12] y: 1 size: DWORD  <||@
  Comment 76 30 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 83 32 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 83 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 90 34 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 98 36 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 98 38 JUMP ~[] destination: B4 -> B5  <||@
  Comment 98 block B5 null  <||@
  Comment 98 40 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 98 42 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 102 44 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>]  <||@
  Comment 102 {Object[Instance<java.lang.Class>]}  <||@
  Comment 112 46 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@140a3fc58 encoding: base: 0 shift: 3  <||@
  Comment 119 48 MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 122 50 MEMBAR barriers: 4  <||@
  Comment 127 52 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 131 54 rdx|QWORD = MOVE input: long[4531113984|0x10e135000]  <||@
  Comment 141 56 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 145 58 rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 148 62 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170  <||@
  Comment 157 12  <||@
  Comment 167 block B1 null  <||@
  Comment 167 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 66 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 167 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 177 70 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 182 72 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 182 {Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 187 []at JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |r10|DWORD  |-   <||@
  Comment 188 76 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 191 78 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 193 block B2 null  <||@
  Comment 193 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 86 MOV [r15|QWORD + 644] y: -18529 size: DWORD  <||@
  Comment 204 88 MOV [r15|QWORD + 656] y: 0 size: QWORD  <||@
  Comment 215 90 DEOPT info [bci:0]  <||@
  Comment 215 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1108bc130, value=4610474814]:0x112ce433e}  <||@
  Comment 220 []at JavaExamples.exampleFullEscape(JavaExamples.java:120) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |r10|DWORD  |-   <||@
  Comment 221 {Stub<ExceptionHandlerStub.exceptionHandler>@0x112e24320:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 221 4  <||@
  Comment 227 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1108bc128, value=4610474560]:0x112ce4240}  <||@
  Comment 227 5  <||@
  HexCodeFile>>> <|@
end_nmethod
