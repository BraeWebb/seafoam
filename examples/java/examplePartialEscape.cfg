begin_compilation
  name " HotSpotCompilation-353[JavaExamples.examplePartialEscape(boolean, int)]"
  method "HotSpotCompilation-353[JavaExamples.examplePartialEscape(boolean, int)]"
  date 1583364091931
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v41 v18 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v9 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:132) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i6 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:132) [bci: 9]
stamp: void
trueSuccessorProbability: 0.49946707815656766
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v11 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:136) [bci: 20]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:136) [bci: 23]
stamp: void
=== Inputs ===
result: i2 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i2 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 12]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j47 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j47 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j193 
=== Usages ===
v254 v255 
=== Predecessor ===
v10 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j193  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j47 
index: - 
=== Succesors ===
=== Usages ===
j193 v195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j47 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v254 
lastLocationAccess: - 
=== Succesors ===
next: j194 
=== Usages ===
j231 v256 v257 v259 v263 a122 v258 v262 v261 v260 
=== Predecessor ===
j47 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v254 lastLocationAccess: - #next: j194  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j47 
index: - 
=== Succesors ===
=== Usages ===
j194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j47 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v255 
lastLocationAccess: - 
=== Succesors ===
next: v59 
=== Usages ===
v68 
=== Predecessor ===
j193 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v255 lastLocationAccess: - #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid j149 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j193 
y: j149 
=== Succesors ===
=== Usages ===
v68 v195 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j193 y: j149  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@136e382d8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j194 
y: j231 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j194 y: j231  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 a72 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
j194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v69 #falseSuccessor: v70  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a72 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a72  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.examplePartialEscape(boolean, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 131
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 - 
=== Succesors ===
=== Usages ===
v79 a72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a72 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a72 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array_or_null(KlassPointer,int)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@147e04090
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v45 i38 
=== Succesors ===
next: v73 
=== Usages ===
v74 a124 
=== Predecessor ===
v69 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v45 i38 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a72 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a72  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
a72 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v75 #falseSuccessor: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v79  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@137006448
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v254 
value: j231 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v254 value: j231 stateAfter: - lastLocationAccess: - #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v260 
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v260 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v261 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v261 #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v262 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v262 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v263 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v263 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v256 
value: i38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v256 value: i38 stateAfter: - lastLocationAccess: - #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j46 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v257 
value: j46 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v257 value: j46 stateAfter: - lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v259 
value: v241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v259 value: v241 stateAfter: - lastLocationAccess: - #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j82 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v258 
value: j82 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a122 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v258 value: j82 stateAfter: - lastLocationAccess: - #next: a122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j193 
=== Succesors ===
next: v123 
=== Usages ===
a124 
=== Predecessor ===
v201 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j193 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
a122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v78 
values: a72 a122 
=== Succesors ===
=== Usages ===
v253 a42 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v78 values: a72 a122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v77 v123 
=== Succesors ===
next: v41 
=== Usages ===
a124 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v77 v123 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a124 
index: - 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v253 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a42 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v253 value: i2 stateAfter: - lastLocationAccess: - #next: a42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# [I
=== Inputs ===
object: a124 
=== Succesors ===
next: v43 
=== Usages ===
a24 v252 
=== Predecessor ===
v41 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a124 #next: v43  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
a42 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid a23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
rawvalue: Instance<java.lang.Class>
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Instance<java.lang.Class>]
=== Inputs ===
=== Succesors ===
=== Usages ===
v251 j217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a23 
index: - 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a23 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a24 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
op: Compress
stamp: n!# [I
=== Inputs ===
value: a42 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: JavaExamples.objectField
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
nullCheck: false
stamp: void
volatileAccess: true
=== Inputs ===
stateBefore: - 
guard: - 
address: v251 
value: a24 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v251 value: a24 stateAfter: - lastLocationAccess: - #next: v266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j217 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a23 
=== Succesors ===
next: v224 
=== Usages ===
j220 
=== Predecessor ===
v266 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a23 #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j220 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j217 
y: i219 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j217 y: i219  <|@  <|@
f <@~|@floating>@ <|@
tid j242 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
rawvalue: 4531113984
stableDimension: 0
stamp: i64 [4531113984] ⇊000000010e135000 ⇈000000010e135000
stampKind: i64
value: long[4531113984|0x10e135000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j220 
index: j242 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j220 index: j242  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v264 
value: i225 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i250 
=== Usages ===
=== Predecessor ===
j217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v264 value: i225 stateAfter: - lastLocationAccess: - #next: i250  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a42 
index: - 
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a42 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:134) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v252 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
v16 
=== Predecessor ===
v224 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v252 lastLocationAccess: - #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:134) [bci: 19]
stamp: void
=== Inputs ===
result: i250 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i250 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i250 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13a66a808 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13a66ab30 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v41 v18 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v9 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:132) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i6 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:132) [bci: 9]
stamp: void
trueSuccessorProbability: 0.49946707815656766
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v11 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13a66a808 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:136) [bci: 20]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:136) [bci: 23]
stamp: void
=== Inputs ===
result: i2 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i2 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 12]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j47 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j47 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j193 
=== Usages ===
v254 v255 
=== Predecessor ===
v10 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j193  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j47 
index: - 
=== Succesors ===
=== Usages ===
j193 v195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j47 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j193 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v254 
lastLocationAccess: - 
=== Succesors ===
next: j194 
=== Usages ===
j231 v256 v257 v259 v263 a122 v258 v262 v261 v260 
=== Predecessor ===
j47 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v254 lastLocationAccess: - #next: j194  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j47 
index: - 
=== Succesors ===
=== Usages ===
j194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j47 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j194 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v255 
lastLocationAccess: - 
=== Succesors ===
next: v59 
=== Usages ===
v68 
=== Predecessor ===
j193 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v255 lastLocationAccess: - #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid j149 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j193 
y: j149 
=== Succesors ===
=== Usages ===
v68 v195 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j193 y: j149  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@136e382d8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j194 
y: j231 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j194 y: j231  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 a72 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@13a66cb00 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
j194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v69 #falseSuccessor: v70  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a72 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a72  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<JavaExamples.examplePartialEscape(boolean, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: JavaExamples.java
sourceLine: 131
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 - 
=== Succesors ===
=== Usages ===
v79 a72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a72 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a72 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array_or_null(KlassPointer,int)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@147e04090
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v45 i38 
=== Succesors ===
next: v73 
=== Usages ===
v74 a124 
=== Predecessor ===
v69 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v45 i38 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a72 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a72  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
a72 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v75 #falseSuccessor: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v79  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@137006448
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v254 
value: j231 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v254 value: j231 stateAfter: - lastLocationAccess: - #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
result [v2|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v260 
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v260 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
result [v2|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v261 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v261 #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
result [v2|QWORD + 344] <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v262 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v262 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
result [v2|QWORD + 408] <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v263 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v263 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
result [v2|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v256 
value: i38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v256 value: i38 stateAfter: - lastLocationAccess: - #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
result [v2|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j46 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v257 
value: j46 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v257 value: j46 stateAfter: - lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
result [v2|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v259 
value: v241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v259 value: v241 stateAfter: - lastLocationAccess: - #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
result [v2|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j82 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v258 
value: j82 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a122 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v258 value: j82 stateAfter: - lastLocationAccess: - #next: a122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a122 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j193 
=== Succesors ===
next: v123 
=== Usages ===
a124 
=== Predecessor ===
v201 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j193 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
a122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a124 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v78 
values: a72 a122 
=== Succesors ===
=== Usages ===
v253 a42 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v78 values: a72 a122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:402) [bci: 0]
at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v77 v123 
=== Succesors ===
next: v41 
=== Usages ===
a124 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v77 v123 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
result [v7|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a124 
index: - 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v253 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a42 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v253 value: i2 stateAfter: - lastLocationAccess: - #next: a42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a42 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# [I
=== Inputs ===
object: a124 
=== Succesors ===
next: v43 
=== Usages ===
a24 v252 
=== Predecessor ===
v41 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a124 #next: v43  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at JavaExamples.examplePartialEscape(boolean, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
a42 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid a23 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
rawvalue: Instance<java.lang.Class>
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Instance<java.lang.Class>]
=== Inputs ===
=== Succesors ===
=== Usages ===
v251 j217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
result [v8|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a23 
index: - 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a23 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a24 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
op: Compress
stamp: n!# [I
=== Inputs ===
value: a42 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: JavaExamples.objectField
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
nullCheck: false
stamp: void
volatileAccess: true
=== Inputs ===
stateBefore: - 
guard: - 
address: v251 
value: a24 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v251 value: a24 stateAfter: - lastLocationAccess: - #next: v266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j217 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j217 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a23 
=== Succesors ===
next: v224 
=== Usages ===
j220 
=== Predecessor ===
v266 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a23 #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j220 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
result v10|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j217 
y: i219 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j217 y: i219  <|@  <|@
f <@~|@floating>@ <|@
tid j242 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
rawvalue: 4531113984
stableDimension: 0
stamp: i64 [4531113984] ⇊000000010e135000 ⇈000000010e135000
stampKind: i64
value: long[4531113984|0x10e135000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
result [v10|QWORD[*] + v11|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j220 
index: j242 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j220 index: j242  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.replacements.gc.SerialWriteBarrierSnippets.serialImpreciseWriteBarrier(SerialWriteBarrierSnippets.java:60) [bci: 0]
at JavaExamples.examplePartialEscape(JavaExamples.java:133) [bci: 13]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v264 
value: i225 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i250 
=== Usages ===
=== Predecessor ===
j217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v264 value: i225 stateAfter: - lastLocationAccess: - #next: i250  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
result [v7|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a42 
index: - 
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a42 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i250 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:134) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v252 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
v16 
=== Predecessor ===
v224 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v252 lastLocationAccess: - #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at JavaExamples.examplePartialEscape(JavaExamples.java:134) [bci: 19]
stamp: void
=== Inputs ===
result: i250 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i250 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i250 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13a66ab30 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13a66a808 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13a66ab30 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13a66a808 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13a66ab30 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13a66a808 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13a66ab30 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13a66a808 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13a66ab30 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   -1  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@147e07170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13a66a808 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction v11|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   82  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   88  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction v11|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   82  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   88  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v12|d [0, 1[[68, 70[[74, 76[[86, 88[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[84, 86[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[82, 86[ "NoOptimization"
  v0|d DWORD "[v0|d]" v0|d rsi|q [6, 24[[78, 94[[98, 105[6 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 50[[72, 74[[78, 105[8 MustHaveRegister 50 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [16, 44[16 MustHaveRegister 18 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 42 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [18, 26[18 MustHaveRegister 20 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [80, 82[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q rax|q [88, 97[88 MustHaveRegister 90 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v2|q [44, 47[44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|q [48, 66[50 MustHaveRegister 54 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [52, 60[52 MustHaveRegister 56 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v7|q [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v8|q [60, 64[60 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v12|d [0, 1[[68, 70[[74, 76[[86, 88[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[84, 86[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[82, 86[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 24[[78, 94[[98, 105[6 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 50[[72, 74[[78, 105[8 MustHaveRegister 50 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [16, 44[16 MustHaveRegister 18 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 42 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [18, 26[18 MustHaveRegister 20 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [80, 82[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [88, 97[88 MustHaveRegister 90 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|q [44, 47[44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [48, 66[50 MustHaveRegister 54 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [52, 60[52 MustHaveRegister 56 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rdx|d]" v9|d v7|q [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v8|q [60, 64[60 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction v11|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   82  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   88  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v12|d [0, 1[[68, 70[[74, 76[[86, 88[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[84, 86[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[82, 86[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 24[[78, 94[[98, 105[6 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 50[[72, 74[[78, 105[8 MustHaveRegister 50 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [16, 44[16 MustHaveRegister 18 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 42 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [18, 26[18 MustHaveRegister 20 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [80, 82[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [88, 97[88 MustHaveRegister 90 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|q [44, 47[44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [48, 66[50 MustHaveRegister 54 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [52, 60[52 MustHaveRegister 56 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rdx|d]" v9|d v7|q [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v8|q [60, 64[60 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction v11|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   82  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   88  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v12|d [0, 1[[68, 70[[74, 76[[86, 88[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[84, 86[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v4|q [0, 6[[82, 86[ "NoOptimization"
  v0|d DWORD "[r10|d]" v0|d rsi|q [6, 24[[78, 94[[98, 105[6 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 50[[72, 74[[78, 105[8 MustHaveRegister 50 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [16, 44[16 MustHaveRegister 18 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 42 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [18, 26[18 MustHaveRegister 20 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [80, 82[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [88, 97[88 MustHaveRegister 90 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v2|q [44, 47[44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [48, 66[50 MustHaveRegister 54 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [52, 60[52 MustHaveRegister 56 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rdx|d]" v9|d v7|q [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v8|q [60, 64[60 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [v7|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction v11|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   82  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   88  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [v2|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [v2|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [v2|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [v2|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction v6|QWORD[.] = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [v7|QWORD[.] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [v8|QWORD[.] + 116], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction v10|QWORD[*] = SHR v8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction v11|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [v10|QWORD[*] + v11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   82  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   88  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   90  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   90  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   90  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   90  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   90  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   90  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   90  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   90  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   90  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   90  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602598251443896880
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 3 <|@ <|@
      nr   30  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 3 <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 3 <|@ <|@
      nr   34  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 3 <|@ <|@
      nr   36  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602683619305877911
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>] <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOVE input: long[4531113984|0x10e135000] <|@ <|@
      nr   64  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602669218906184914
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4572420773847252863
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   84  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   90  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 644] y: -20321 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 656] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: []
live-base-pointers: []
JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0]
locals: r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_1      
     1: newarray      int
     3: dup           
     4: iconst_0      
     5: iload_1       
     6: iastore       
     7: astore_2      
     8: iload_0       
     9: ifeq          20
    12: aload_2       
    13: putstatic     #53         // objectField:java.lang.Object
    16: aload_2       
    17: iconst_0      
    18: iaload        
    19: ireturn       
    20: aload_2       
    21: iconst_0      
    22: iaload        
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c2410448bd6448bda4585d20f8494000000498b4760488d7018493b77700f8798000000498977600f0d88d80000000f0d88180100000f0d88580100000f0d8898010000c7400c0100000048c70001000000c74008addeadde48c74010000000004489581048beaddeaddeaddeadde488bd048c1ea03895674f08304240048c1ee0948ba0050130e01000000c60416008b4010488b6c24104883c418850500000000c5f877c3418bc3488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba01000000e800000000904885c0758b41c787840200009fb0ffff49c7879002000000000000e80000000090e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD  <||@
  Comment 16 6 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 25 12 BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 31 block B2 null  <||@
  Comment 31 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 31 16 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 35 18 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 39 20 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 43 22 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 49 block B6 null  <||@
  Comment 49 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 49 26 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 53 28 AMD64PREFETCH ~[rax|QWORD + 216] instr: 3  <||@
  Comment 60 30 AMD64PREFETCH ~[rax|QWORD + 280] instr: 3  <||@
  Comment 67 32 AMD64PREFETCH ~[rax|QWORD + 344] instr: 3  <||@
  Comment 74 34 AMD64PREFETCH ~[rax|QWORD + 408] instr: 3  <||@
  Comment 81 36 MOV [rax|QWORD + 12] y: 1 size: DWORD  <||@
  Comment 88 38 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 95 40 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 95 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 102 42 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 110 44 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 110 46 JUMP ~[] destination: B6 -> B7  <||@
  Comment 110 block B7 null  <||@
  Comment 110 48 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 110 50 MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 114 52 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>]  <||@
  Comment 114 {Object[Instance<java.lang.Class>]}  <||@
  Comment 124 54 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3  <||@
  Comment 131 56 MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 134 58 MEMBAR barriers: 4  <||@
  Comment 139 60 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 143 62 rdx|QWORD = MOVE input: long[4531113984|0x10e135000]  <||@
  Comment 153 64 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 157 66 rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 160 70 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790  <||@
  Comment 169 12  <||@
  Comment 179 block B1 null  <||@
  Comment 179 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 74 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 182 76 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790  <||@
  Comment 191 12  <||@
  Comment 201 block B3 null  <||@
  Comment 201 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 80 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 201 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 211 84 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 216 86 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 216 {Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 221 []at JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2 
     locals:  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 222 90 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 225 92 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 227 block B4 null  <||@
  Comment 227 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 100 MOV [r15|QWORD + 644] y: -20321 size: DWORD  <||@
  Comment 238 102 MOV [r15|QWORD + 656] y: 0 size: QWORD  <||@
  Comment 249 104 DEOPT info [bci:0]  <||@
  Comment 249 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1108bc130, value=4610474814]:0x112ce433e}  <||@
  Comment 254 []at JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2 
     locals:  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 255 {Stub<ExceptionHandlerStub.exceptionHandler>@0x112e24320:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 255 4  <||@
  Comment 261 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1108bc128, value=4610474560]:0x112ce4240}  <||@
  Comment 261 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-353[JavaExamples.examplePartialEscape(boolean, int)]"
  method "HotSpotCompilation-353[JavaExamples.examplePartialEscape(boolean, int)]"
  date 1583364092023
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 112e36c60 89842400c0feff4883ec1848896c2410448bd6448bda4585d20f8494000000498b4760488d7018493b77700f8798000000498977600f0d88d80000000f0d88180100000f0d88580100000f0d8898010000c7400c0100000048c70001000000c74008610100f848c74010000000004489581048beb0275f1507000000488bd048c1ea03895674f08304240048c1ee0948ba0050130e01000000c60416008b4010488b6c24104883c4188505f74293fbc5f877c3418bc3488b6c24104883c4188505e14293fbc5f877c348be080b00c007000000ba01000000e8a3d9ffff904885c0758b41c787840200009fb0ffff49c7879002000000000000e8e0d5eaff90e8bcd5feff90e8d6d4eaff90f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13ae0b098 slotKind: QWORD  <||@
  Comment 16 6 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 25 12 BRANCH trueDestinationProbability: 0.49946707815656766 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 31 block B2 null  <||@
  Comment 31 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 31 16 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 35 18 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 39 20 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 43 22 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 49 block B6 null  <||@
  Comment 49 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 49 26 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 53 28 AMD64PREFETCH ~[rax|QWORD + 216] instr: 3  <||@
  Comment 60 30 AMD64PREFETCH ~[rax|QWORD + 280] instr: 3  <||@
  Comment 67 32 AMD64PREFETCH ~[rax|QWORD + 344] instr: 3  <||@
  Comment 74 34 AMD64PREFETCH ~[rax|QWORD + 408] instr: 3  <||@
  Comment 81 36 MOV [rax|QWORD + 12] y: 1 size: DWORD  <||@
  Comment 88 38 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 95 40 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 95 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 102 42 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 110 44 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 110 46 JUMP ~[] destination: B6 -> B7  <||@
  Comment 110 block B7 null  <||@
  Comment 110 48 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 110 50 MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 114 52 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Class>]  <||@
  Comment 114 {Object[Instance<java.lang.Class>]}  <||@
  Comment 124 54 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13ae0bc08 encoding: base: 0 shift: 3  <||@
  Comment 131 56 MOV (x: [rsi|QWORD[.] + 116], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 134 58 MEMBAR barriers: 4  <||@
  Comment 139 60 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 143 62 rdx|QWORD = MOVE input: long[4531113984|0x10e135000]  <||@
  Comment 153 64 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 157 66 rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 160 70 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790  <||@
  Comment 169 12  <||@
  Comment 179 block B1 null  <||@
  Comment 179 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 74 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 182 76 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@13ae06790  <||@
  Comment 191 12  <||@
  Comment 201 block B3 null  <||@
  Comment 201 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 80 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 201 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 211 84 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 216 86 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD] [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 216 {Stub<new_array_or_null(KlassPointer,int)Object>@0x112e346e0:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 221 []at JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2 
     locals:  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 222 90 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 225 92 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 227 block B4 null  <||@
  Comment 227 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 100 MOV [r15|QWORD + 644] y: -20321 size: DWORD  <||@
  Comment 238 102 MOV [r15|QWORD + 656] y: 0 size: QWORD  <||@
  Comment 249 104 DEOPT info [bci:0]  <||@
  Comment 249 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1108bc130, value=4610474814]:0x112ce433e}  <||@
  Comment 254 []at JavaExamples.examplePartialEscape(JavaExamples.java:131) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2 
     locals:  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 255 {Stub<ExceptionHandlerStub.exceptionHandler>@0x112e24320:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 255 4  <||@
  Comment 261 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1108bc128, value=4610474560]:0x112ce4240}  <||@
  Comment 261 5  <||@
  HexCodeFile>>> <|@
end_nmethod
